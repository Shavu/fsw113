What is an Array? – An Array is a JavaScript object used to store multiple values in a single variable.  Arrays can contain mixed data types.
Arrays are created using square brackets [] or the new keyword
var icecreamFlavors = [“Chocolate”, “Vanilla”, “Strawberry”, “RockyRoad”]
var icecreamFlavors = new Array(“Chocolate”, “Vanilla”, “Strawberry”, “RockyRoad”)
Items in an Array are accessed and referenced by an index number that starts at 0. 
var myFavoriteFlavor = icecreamFlavors[2]        // myFavoriteFlavor = “Strawberry”
push(e) - Adds an element(e) to the end of an Array
pop() – Removes an element(e) from the end of an Array
shift() – Removes an element from the beginning of an Array
indexOf(e) – Finds the index of an element(e) in an Array
slice(start,end) – Returns selected elements in an Array, starting at start and ends at end, but does not include end, as a new Array.  If start is omitted, the default is 0.  If end is omitted, then the default value is the end of the array.
splice(start, howmany) – Removes item(s) starting at the start position and removes howmany elements.  Default value of howmany is 1.

forEach(callbackFn) - Calls a function (callbackFn) for each element in the array.

filter(callbackFn) – Returns a new array containing all the elements of the calling array for which the provided filtering function (callbackFn) returns true.

map(callbackFn) - Returns a new array containing the results of calling a function (callbackFn) on every element in this array.

find(callbackFn) - Returns the value of the first element in the provided array that satisfies the provided testing function. If no values satisfy the testing function (callbackFn), undefined is returned.

some (callbackFn) - Returns true if at least one element in this array satisfies the provided testing function (callbackFn).

every(callbackFn) - Returns true if every element in this array satisfies the testing function (callbackFn).

reduce (callbackFn) - Apply a user-supplied “reducer” function on each element of the array (from left-to-right) passing the calculation value  to  the next element.  The final result is a single value.

sort(compareFn)- Sorts the elements of an array in place and returns the array. compareFn is optional and if omitted, the elements are converted to strings and then sorted.
